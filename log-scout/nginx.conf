# Global Security Settings - CIS
server_tokens off;

# Define secure log format - CIS
log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" $request_time';

# Include blocked IPs file (created by our script)
include /etc/nginx/blocked_ips/blocked_ips.conf;

# Rate limiting zones - CIS
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=admin:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

# Main website server block - CIS
server {
    server_name www.sample.url.com sample.url.com;
    listen 443 ssl http2;
    
    # SSL Configuration - CIS
    ssl_certificate     /etc/ssl/certs/sample.url.com.crt;
    ssl_certificate_key /etc/ssl/private/sample.url.com.key;
    
    # CIS-compliant SSL protocols and ciphers
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!aNULL:!MD5:!DSS;
    ssl_prefer_server_ciphers off;
    
    # SSL session optimization - CIS
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP stapling - CIS
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # CIS-compliant Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Remove server information - CIS
    server_tokens off;
    
    # Logging - CIS
    access_log /var/log/nginx/sample.url.com.access.log main buffer=16k flush=2m;
    error_log /var/log/nginx/sample.url.com.error.log;
    
    charset utf-8;
    
    # Main application proxy with security - CIS
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_pass http://127.0.0.1:3000;
        proxy_read_timeout 90s;
        proxy_connect_timeout 30s;
        proxy_send_timeout 90s;
        
        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # API endpoints with rate limiting - CIS
    location /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:3001;
        proxy_read_timeout 120s;
        
        # Rate limiting for API - CIS 
        limit_req zone=api burst=10 nodelay;
        
        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # Static assets with caching - CIS
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|svg|eot|pdf)$ {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:3000;
        
        # Caching headers
        expires 1y;
        add_header Cache-Control "public, immutable" always;
        add_header Vary "Accept-Encoding" always;
        add_header X-Content-Type-Options "nosniff" always;
        
        # Disable access log for static assets to reduce I/O
        access_log off;
    }
    
    # Deny access to hidden files - CIS
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to backup and source files - CIS
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to configuration files - CIS
    location ~ \.(conf|ini|log|sh|sql|env)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Well-known directory for Let's Encrypt - CIS
    location ^~ /.well-known/ {
        root /var/www/html;
        allow all;
        access_log off;
        log_not_found off;
    }
}

# HTTP to HTTPS redirect - CIS
server {
    listen 80;
    server_name www.sample.url.com sample.url.com;
    
    # Security headers for redirect
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Access log for redirects
    access_log /var/log/nginx/sample.url.com.redirect.access.log main buffer=16k flush=2m;
    
    # Return 301 redirect to HTTPS
    return 301 https://$host$request_uri;
}

# Admin panel server block - CIS
server {
    server_name admin.sample.url.com;
    listen 443 ssl http2;
    
    # SSL Configuration - CIS
    ssl_certificate     /etc/ssl/certs/admin.sample.url.com.crt;
    ssl_certificate_key /etc/ssl/private/admin.sample.url.com.key;
    
    # CIS-compliant SSL protocols and ciphers
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:!aNULL:!MD5:!DSS;
    ssl_prefer_server_ciphers off;
    
    # SSL session optimization - CIS
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # OCSP stapling - CIS
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # CIS-compliant Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Remove server information - CIS
    server_tokens off;
    
    # Logging - CIS
    access_log /var/log/nginx/admin.sample.url.com.access.log main buffer=16k flush=2m;
    error_log /var/log/nginx/admin.sample.url.com.error.log;
    
    # Admin panel location with authentication
    location / {
        proxy_pass              http://127.0.0.1:8000;
        proxy_set_header        Host $host;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        X-Forwarded-Host $server_name;
        proxy_connect_timeout   30s;
        proxy_read_timeout      60s;
        proxy_send_timeout      60s;
        
        # Basic authentication for admin panel
        auth_basic              "Admin Area - Authorized Access Only";
        auth_basic_user_file    /etc/nginx/.htpasswd;
        
        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # Deny access to sensitive files in admin panel - CIS
    location ~* \.(db|sql|log|conf|ini|env)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }
}

# HTTP redirect for admin panel - CIS
server {
    listen 80;
    server_name admin.sample.url.com;
    
    # Security headers for admin redirect
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Access log for admin redirects
    access_log /var/log/nginx/admin.sample.url.com.redirect.access.log main buffer=16k flush=2m;
    
    return 301 https://$host$request_uri;
}

# Default server block - CIS
server {
    listen 80 default_server;
    listen 443 ssl http2 default_server;
    server_name _;
    
    # SSL configuration for default server
    ssl_certificate     /etc/ssl/certs/default.crt;
    ssl_certificate_key /etc/ssl/private/default.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    
    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Remove server information - CIS
    server_tokens off;
    
    return 443;
}
include /root/log-scout/blocked_ips/blocked_ips.conf;
